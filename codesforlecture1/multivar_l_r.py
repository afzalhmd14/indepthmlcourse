import numpy as np
import matplotlib.pyplot as plt
from d_multiv import data
def cost(x,y,theta):
    x_ = np.matrix(x)
    t = np.matrix(theta)
    #print(x)
    #print(len(y[0]))
    #y_ = np.ndarray(y)
    h = (np.dot(t,x_))
    cst = (np.square(h-y))/(2*len(y))
    return np.sum(cst)
def cost_del(x,y,theta):
    x_ = np.matrix(x)
    t = np.matrix(theta)
    h = (np.dot(t,x_))

    d = (h-y)/(len(y))
    cst= np.dot(x_,d.transpose())
    #print(x_)
    #print(d)
    #print(cst)
    cst_d = cst.transpose()
    return np.array(cst_d)
tr_dat = data(300)
x_tar = []
x_tar.append(tr_dat[0])
x_tar.append(tr_dat[1])
x_tar.append(tr_dat[2])
x_tar.append(tr_dat[3])
x_tar.append(tr_dat[4])
y_tr = tr_dat[5]
print(y_tr)
x_tr = np.array(x_tar)
x_r=np.ones(300)
alfa = 0.01
print([x_r])
print(x_tr)
x_r = np.append([x_r],[x_tr[0]],axis=0)
x_r = np.append(x_r,[x_tr[1]],axis=0)
x_r = np.append(x_r,[x_tr[2]],axis=0)
x_r = np.append(x_r,[x_tr[3]],axis=0)
x_r = np.append(x_r,[x_tr[4]],axis=0)
theta = np.ones(len(x_r[:,0]))
print("initial cost")
print(cost(x_r,y_tr,theta))
for i in range(2000):
    theta = theta - (alfa)*(cost_del(x_r,y_tr,theta)[0])
    plt.plot(i,(cost(x_r,y_tr,theta)),'go')
plt.show()
print("final cost")
print(cost(x_r,y_tr,theta))
plt.plot(x_tr[0],y_tr,'ro')
plt.plot(np.sort(x_tr[0]),np.sort(np.dot(theta,x_r)),'bo')
plt.show()
plt.plot(x_tr[1],y_tr,'ro')
plt.plot(np.sort(x_tr[1]),np.sort(np.dot(theta,x_r)),'bo')
plt.show()
plt.plot(x_tr[2],y_tr,'ro')
plt.plot(np.sort(x_tr[2]),np.sort(np.dot(theta,x_r)),'bo')
plt.show()
plt.plot(x_tr[3],y_tr,'ro')
plt.plot(np.sort(x_tr[3]),np.sort(np.dot(theta,x_r)),'bo')
plt.show()
plt.plot(x_tr[4],y_tr,'ro')
plt.plot(np.sort(x_tr[4]),np.sort(np.dot(theta,x_r)),'bo')
plt.show()
print("updates value of theta are")
print(theta)
